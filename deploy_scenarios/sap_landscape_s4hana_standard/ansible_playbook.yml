---
# Ansible Playbook for SAP S/4HANA Standard installation

# Use include_role / include_tasks inside Ansible Task block, instead of using roles declaration or Task block with import_roles.
# This ensures Ansible Roles, and the tasks within, will be parsed in sequence instead of parsing at Playbook initialization.


#### Begin Infrastructure-as-Code provisioning ####
- name: Ansible Play to create dynamic inventory group for provisioning
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Search variables for placeholders  # noqa: ignore-errors
      ansible.builtin.set_fact:
        sap_playbook_placeholder_vars: "{{ sap_playbook_placeholder_vars | d([]) + [item.key] }}"
      loop: "{{ vars | dict2items | selectattr('key', 'match', '^(__)?sap_') | list }}"
      no_log: true
      ignore_errors: true
      when: item.value == 'ENTER_STRING_VALUE_HERE'

    - name: Warning if placeholder variable was found
      ansible.builtin.fail:
        msg: |
          Ensure that the variables do not contain placeholder values before executing playbook again.
          Variables: {{ sap_playbook_placeholder_vars | join(', ') }}
      when: sap_playbook_placeholder_vars is defined and sap_playbook_placeholder_vars | length > 0

    - name: Set fact with selected host dictionary
      ansible.builtin.set_fact:
        sap_playbook_host_dictionary:
          "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform
            + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan] }}"

    - name: Create dynamic inventory group for Ansible Role sap_vm_provision
      ansible.builtin.add_host:
        name: "{{ item }}"
        group: sap_vm_provision_target_inventory_group
      loop: "{{ sap_playbook_host_dictionary.keys() }}"
      when: sap_vm_provision_iac_type in ['ansible', 'ansible_to_terraform']


# Ansible Play target hosts pattern, use Inventory Group created by previous Ansible Task (add_host)
- name: Ansible Play to provision hosts for SAP
  hosts: sap_vm_provision_target_inventory_group
  gather_facts: false
  tasks:

    # Ensure that all sap_* or __sap_* variables set in Interactive Mode are appended to the target inventory Group
    - name: Assign all relevant facts from execution node before provisioning  # noqa: ignore-errors
      ansible.builtin.set_fact:
        "{{ item.key }}": "{{ item.value }}"
        cacheable: true
      loop: "{{ hostvars['localhost'] | dict2items | selectattr('key', 'match', '^(__)?sap_') | list }}"
      no_log: true
      ignore_errors: true

    - name: Execute Ansible Role sap_vm_provision
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_provision
      when: sap_vm_provision_iac_type in ['ansible', 'ansible_to_terraform']

- name: Ansible Play to set sap variables on provisioned hosts
  hosts: sap_vm_provision_target_inventory_group  # noqa: ignore-errors
  gather_facts: false
  tasks:

    - name: Assign all relevant facts from execution node after provisioning  # noqa: ignore-errors
      ansible.builtin.set_fact:
        "{{ item.key }}": "{{ item.value }}"
        cacheable: true
      loop: "{{ hostvars['localhost'] | dict2items | selectattr('key', 'match', '^(__)?sap_') | list }}"
      no_log: true
      ignore_errors: true


#### VM storage filesystem setup ####
- name: Ansible Play for hosts storage setup
  hosts: all
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    # Use inventory_hostname_short to retrieve host specification from the dictionary.
    # While ansible_hostname will work for Ansible only, using Ansible>Terraform may see ansible_hostname as 'localhost' and fail
    - name: Execute Ansible Role sap_storage_setup
      ansible.builtin.include_role:
        name: community.sap_install.sap_storage_setup
      vars:
        sap_playbook_host_dictionary_hostname:
          "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform
           + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][inventory_hostname_short] }}"
        sap_storage_setup_sid: "{{ sap_playbook_host_dictionary_hostname['sap_storage_setup_sid'] | d('') }}"
        sap_storage_setup_nwas_abap_ascs_instance_nr: "{{ sap_playbook_host_dictionary_hostname['sap_storage_setup_nwas_abap_ascs_instance_nr'] | d('') }}"
        sap_storage_setup_nwas_abap_pas_instance_nr: "{{ sap_playbook_host_dictionary_hostname['sap_storage_setup_nwas_abap_pas_instance_nr'] | d('') }}"
        sap_storage_setup_nwas_abap_aas_instance_nr: "{{ sap_playbook_host_dictionary_hostname['sap_storage_setup_nwas_abap_aas_instance_nr'] | d('') }}"
        sap_storage_setup_host_type: "{{ sap_playbook_host_dictionary_hostname['sap_storage_setup_host_type'] | list }}"
      when: sap_vm_provision_iac_type in ['ansible', 'ansible_to_terraform', 'existing_hosts']


- name: Ansible Play for ensuring rsync on all hosts
  hosts: all
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Install rsync
      ansible.builtin.package:
        name: rsync
        state: present


#### Begin downloading SAP software installation media to hosts ####
- name: Ansible Play for downloading SAP S/4HANA installation media
  hosts: project_dev_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    # SAP software download will only occur if the 'community.sap_launchpad' collection is installed.
    # Playbook will continue without the collection, assuming SAP software is already available.
    - name: Check availability of sap_launchpad collection on execution node
      delegate_to: localhost
      become: false  # Enables usage of Python VENV
      ansible.builtin.command:
        cmd: ansible-galaxy collection list
      register: sap_playbook_collection_list_output

    - name: Execute Ansible Role sap_software_download
      ansible.builtin.include_role:
        name: community.sap_launchpad.sap_software_download
      vars:
        sap_software_download_suser_id: "{{ sap_id_user }}"
        sap_software_download_suser_password: "{{ sap_id_user_password }}"
        sap_software_download_directory: "{{ sap_install_media_detect_source_directory }}"
        sap_software_download_deduplicate: first
        sap_software_download_files: "{{ sap_software_install_dictionary[sap_software_product]
          ['softwarecenter_search_list_' ~ ansible_architecture] }}"
      when: sap_playbook_collection_list_output.stdout_lines | select('search', 'community.sap_launchpad')

    - name: Find SAP HANA installation media
      ansible.builtin.find:
        paths:
          - "{{ sap_install_media_detect_source_directory }}"
        patterns: "{{ sap_software_install_dictionary[sap_software_product]['software_files_hana_wildcard_list'] }}"
        recurse: true
      register: sap_hana_install_media_files

    - name: Find SAP NetWeaver ASCS and PAS installation media
      ansible.builtin.find:
        paths:
          - "{{ sap_install_media_detect_source_directory }}"
        patterns: "{{ sap_software_install_dictionary[sap_software_product]['software_files_wildcard_list'] }}"
        recurse: true
      register: sap_nwas_install_media_files

    - name: Prepare for file transfers, copy Private SSH Key from local
      ansible.builtin.copy:
        src: "{{ sap_vm_provision_ssh_host_private_key_file_path
          if sap_vm_provision_ssh_host_private_key_file_path is defined
          else sap_vm_provision_terraform_work_dir_path ~ '/ssh/hosts_rsa' }}"
        dest: "/tmp/hosts_rsa"
        mode: "0400"


- name: Ansible Play for host variables
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary, project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Set fact for host names
      ansible.builtin.set_fact:
        sap_inventory_project_dev_hana_primary_hostname: "{{ hostvars[inventory_hostname].groups.project_dev_hana_primary[0] }}"
        sap_inventory_project_dev_nwas_pas_hostname: "{{ hostvars[inventory_hostname].groups.project_dev_nwas_pas[0] }}"
        sap_inventory_project_tst_hana_primary_hostname: "{{ hostvars[inventory_hostname].groups.project_tst_hana_primary[0] }}"
        sap_inventory_project_tst_nwas_pas_hostname: "{{ hostvars[inventory_hostname].groups.project_tst_nwas_pas[0] }}"
        sap_inventory_project_prd_hana_primary_hostname: "{{ hostvars[inventory_hostname].groups.project_prd_hana_primary[0] }}"
        sap_inventory_project_prd_nwas_pas_hostname: "{{ hostvars[inventory_hostname].groups.project_prd_nwas_pas[0] }}"

    - name: Set var of IP Addresses of hosts
      ansible.builtin.set_fact:
        sap_inventory_project_dev_hana_primary_ip: "{{ hostvars[sap_inventory_project_dev_hana_primary_hostname].ansible_host }}"
        sap_inventory_project_dev_nwas_pas_ip: "{{ hostvars[sap_inventory_project_dev_nwas_pas_hostname].ansible_host }}"
        sap_inventory_project_tst_hana_primary_ip: "{{ hostvars[sap_inventory_project_tst_hana_primary_hostname].ansible_host }}"
        sap_inventory_project_tst_nwas_pas_ip: "{{ hostvars[sap_inventory_project_tst_nwas_pas_hostname].ansible_host }}"
        sap_inventory_project_prd_hana_primary_ip: "{{ hostvars[sap_inventory_project_prd_hana_primary_hostname].ansible_host }}"
        sap_inventory_project_prd_nwas_pas_ip: "{{ hostvars[sap_inventory_project_prd_nwas_pas_hostname].ansible_host }}"


- name: Ansible Play for updating /etc/hosts file before SAP software installations
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary, project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    # Ensure SAP AnyDB, SAP HANA or SAP NetWeaver hostname is not localhost in /etc/hosts.
    # See SAP Note 1054467 - Local host name refers to loopback address
    - name: Update /etc/hosts file
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        line: "{{ item }}"
        state: present
      loop:
        - "{{ sap_inventory_project_dev_hana_primary_ip }}\t{{ sap_inventory_project_dev_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_dev_hana_primary_hostname }}"
        - "{{ sap_inventory_project_dev_nwas_pas_ip }}\t{{ sap_inventory_project_dev_nwas_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_dev_nwas_pas_hostname }}"
        - "{{ sap_inventory_project_tst_hana_primary_ip }}\t{{ sap_inventory_project_tst_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_tst_hana_primary_hostname }}"
        - "{{ sap_inventory_project_tst_nwas_pas_ip }}\t{{ sap_inventory_project_tst_nwas_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_tst_nwas_pas_hostname }}"
        - "{{ sap_inventory_project_prd_hana_primary_ip }}\t{{ sap_inventory_project_prd_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_prd_hana_primary_hostname }}"
        - "{{ sap_inventory_project_prd_nwas_pas_ip }}\t{{ sap_inventory_project_prd_nwas_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_prd_nwas_pas_hostname }}"


- name: Ansible Play for copying SAP HANA Database Server installation media to other hosts
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Transfer SAP HANA installation media to SAP HANA Primary
      delegate_to: "{{ sap_inventory_project_dev_nwas_pas_ip }}"
      remote_user: "root"
      ansible.posix.synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_source_directory | trim | regex_replace('//', '/') | regex_replace(' ', '') | regex_replace('\\/+$', '') + '/' }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
        # set_remote_user: false
      loop: "{{ hostvars[sap_inventory_project_dev_nwas_pas_hostname].sap_hana_install_media_files.files | map(attribute='path') | list }}"


- name: Ansible Play for copying SAP NetWeaver installation media to host
  hosts: project_tst_nwas_pas, project_prd_nwas_pas # removed project_dev_nwas_pas as this is a roundtrip
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Transfer SAP NetWeaver ASCS installation media to host
      delegate_to: "{{ sap_inventory_project_dev_nwas_pas_ip }}"
      remote_user: "root"
      ansible.posix.synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_source_directory | trim | regex_replace('//', '/') | regex_replace(' ', '') | regex_replace('\\/+$', '') + '/' }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
        # set_remote_user: false
      loop: "{{ hostvars[sap_inventory_project_dev_nwas_pas_hostname].sap_nwas_install_media_files.files | map(attribute='path') | list }}"


- name: Ansible Play to remove temporary files from SAP NetWeaver PAS
  hosts: project_dev_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Remove temporary file, if it exists
      ansible.builtin.file:
        path: "/tmp/hosts_rsa"
        state: absent


#### Begin SAP software hosts preparation ####
- name: Ansible Play for preparing all SAP software hosts
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary, project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_general_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_general_preconfigure


- name: Ansible Play for preparing all SAP NetWeaver hosts
  hosts: project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:
    - name: Execute Ansible Role sap_netweaver_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_netweaver_preconfigure


- name: Ansible Play for preparing all SAP HANA hosts
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:
    - name: Execute Ansible Role sap_hana_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_preconfigure


#### Begin SAP software installations ####
- name: Ansible Play for SAP HANA Database Server installation
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: false
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: false
        sap_install_media_detect_kernel: false
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db: "saphana"

    - name: Execute Ansible Role sap_hana_install
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_install


- name: Ansible Play for SAP NetWeaver Application Server installation - ABAP Central Services (ASCS), Database Load, Primary Application Server (PAS)
  hosts: project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: true
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: true
        sap_install_media_detect_kernel: true
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db_client: "saphana"
        sap_install_media_detect_export: "saps4hana"

    - name: Execute Ansible Role sap_swpm
      ansible.builtin.include_role:
        name: community.sap_install.sap_swpm
      vars:
        sap_swpm_db_host: "{{ lookup('vars', 'sap_inventory_' + sap_system_type + '_hana_primary_hostname') }}"
        sap_swpm_templates_product_input: "{{ sap_software_product }}"
