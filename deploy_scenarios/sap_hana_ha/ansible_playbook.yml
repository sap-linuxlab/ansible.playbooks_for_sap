---
# Ansible Playbook for SAP HANA Scale-Up (Performance Optimized)

# Use include_role / include_tasks inside Ansible Task block, instead of using roles declaration or Task block with import_roles.
# This ensures Ansible Roles, and the tasks within, will be parsed in sequence instead of parsing at Playbook initialization.


#### Begin Infrastructure-as-Code provisioning ####

- name: Ansible Play to gather input for gathering vars and VM provisioning
  hosts: localhost
  gather_facts: false

  # pre_tasks used only for Interactive Prompts only and can be removed without impact
  pre_tasks:

    - name: Playbook Interactive - Check if standard execution with an Ansible Extravars file is requested by end user
      ansible.builtin.set_fact:
        playbook_enable_interactive_prompts: "{{ true if (sap_vm_provision_iac_type is undefined and sap_vm_provision_iac_platform is undefined) else false }}"

    - name: Playbook Interactive - Provision execution - Input for sap_vm_provision_iac_type
      ansible.builtin.pause:
        prompt: "Please choose Infrastructure-as-Code automation from list - ansible , ansible_to_terraform (for existing_hosts, use Ansible standard execution with an Ansible Extravars file)"
      register: sap_vm_provision_iac_type_register
      no_log: true
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - Provision execution - Input for sap_vm_provision_iac_platform
      ansible.builtin.pause:
        prompt: "Please choose Infrastructure Platform from list - aws_ec2_vs , gcp_ce_vm , ibmcloud_powervs , ibmcloud_vs , ibmpowervm_vm , kubevirt_vm , msazure_vm , ovirt_vm"
      register: sap_vm_provision_iac_platform_register
      no_log: true
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - SAP Deployment execution - Input for playbook_enable_default_vars_sap
      ansible.builtin.pause:
        prompt: "Please choose if defaults should be used for SAP Software installation (e.g. SAP System ID) - true , false"
      register: playbook_enable_default_vars_sap_register
      no_log: true
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - Set facts from initial prompts
      ansible.builtin.set_fact:
        sap_vm_provision_iac_type: "{{ sap_vm_provision_iac_type_register.user_input }}"
        sap_vm_provision_iac_platform: "{{ sap_vm_provision_iac_platform_register.user_input }}"
        playbook_enable_default_vars_sap: "{{ playbook_enable_default_vars_sap_register.user_input }}"
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - Trigger prompts for VM provisioning via {{ sap_vm_provision_iac_type }}
      ansible.builtin.include_tasks: "{{ playbook_dir }}/interactive/ansible_tasks_control_inputs.yml"
      when: playbook_enable_interactive_prompts


#### Provision VM ####

- name: Ansible Play to create dynamic inventory group for provisioning
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Create dynamic inventory group for Ansible Role sap_vm_provision
      ansible.builtin.add_host:
        name: "{{ item }}"
        group: sap_vm_provision_target_inventory_group
      loop: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan].keys() }}"
      when: sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"

- name: Ansible Play to provision hosts for SAP
  hosts: sap_vm_provision_target_inventory_group # Ansible Play target hosts pattern, use Inventory Group created by previous Ansible Task (add_host)
  gather_facts: false
  tasks:

    - name: Execute Ansible Role sap_vm_provision
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_provision
      when: sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"


#### VM storage filesystem setup ####

- name: Ansible Play for hosts storage setup
  hosts: hana_primary, hana_secondary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_vm_temp_vip
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_temp_vip


    # Use inventory_hostname_short to retrieve host specification from the dictionary. While ansible_hostname will work for Ansible only, using Ansible>Terraform may see ansible_hostname as 'localhost' and fail
    - name: Execute Ansible Role sap_storage_setup
      ansible.builtin.include_role:
        name: community.sap_install.sap_storage_setup
      vars:
        sap_storage_setup_sid: "{{ sap_system_hana_db_sid }}"
        sap_storage_setup_host_type: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan][inventory_hostname_short].sap_storage_setup_host_type | list }}"
        # sap_storage_setup_definition set for the host by sap_vm_provision Ansible Role
      when:
        - sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"
        - not sap_vm_provision_iac_type == "existing_hosts"


# - name: Ansible Play to execute Preflight Checks
#   hosts: hana_primary, hana_secondary, nwas_ascs, nwas_ers, nwas_pas, nwas_aas
#   become: true
#   any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
#   max_fail_percentage: 0
#   tasks:

#     - name: Execute Ansible Role sap_vm_preflight_checks
#       ansible.builtin.include_role:
#         name: community.sap_infrastructure.sap_vm_verify


- name: Ansible Play for ensuring rsync on all hosts
  hosts: hana_primary, hana_secondary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Install rsync
      ansible.builtin.package:
        name:
          - rsync
        state: present


#### Begin downloading SAP software installation media to hosts ####

- name: Ansible Play for preparing downloads of SAP Software installation media
  hosts: hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Create directories if does not exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ sap_install_media_detect_source_directory }}"

    - name: Install Python package manager pip3 to system Python
      ansible.builtin.package:
        name:
          - "{{ sap_launchpad_python }}"
          - "{{ sap_launchpad_python }}-pip"
        state: present

    - name: Create temporary directory for Python Virtual Environment
      ansible.builtin.tempfile:
        state: directory
        suffix: _sap_launchpad_venv
      register: sap_launchpad_temp_venv

    - name: Install Python modules to Python Virtual Environment
      ansible.builtin.pip:
        name:
          - wheel
          - urllib3
          - requests
          - beautifulsoup4
          - lxml
        virtualenv: "{{ sap_launchpad_temp_venv.path }}"
        virtualenv_command: "{{ sap_launchpad_python_interpreter }} -m venv"


- name: Ansible Play for downloading SAP HANA installation media
  hosts: hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Set fact x86_64 softwarecenter_search_list_saphana
      ansible.builtin.set_fact:
        softwarecenter_search_list: "{{ sap_hana_install_media_dictionary[sap_hana_product_input].softwarecenter_search_list_saphana_x86_64 }}"
      when:
        - ansible_architecture == "x86_64"

    - name: Set fact ppc64le softwarecenter_search_list_saphana
      ansible.builtin.set_fact:
        softwarecenter_search_list: "{{ sap_hana_install_media_dictionary[sap_hana_product_input].softwarecenter_search_list_saphana_ppc64le }}"
      when:
        - ansible_architecture == "ppc64le"

    - name: Execute Ansible Module with system Python to download SAP HANA Database Server installation media
      community.sap_launchpad.software_center_download:
        suser_id: "{{ sap_id_user }}"
        suser_password: "{{ sap_id_user_password }}"
        softwarecenter_search_query: "{{ item }}"
        dest: "{{ sap_install_media_detect_source_directory }}"
      loop: "{{ softwarecenter_search_list }}"
      loop_control:
        label: "{{ item }} : {{ download_task.msg }}"
      register: download_task
      retries: 1
      until: download_task is not failed
      vars:
        ansible_python_interpreter: "{{ sap_launchpad_temp_venv.path ~ '/bin/' ~ sap_launchpad_python_interpreter }}"

    - name: Remove temporary Python Virtual Environment
      ansible.builtin.file:
        path: "{{ sap_launchpad_temp_venv.path }}"
        state: absent

    - name: Find SAP HANA installation media
      ansible.builtin.find:
        paths:
          - "{{ sap_install_media_detect_source_directory }}"
        patterns: "{{ softwarecenter_search_list }}"
        recurse: true
      register: sap_hana_install_media_files

    - name: Prepare for file transfers, copy Private SSH Key used in Terraform deployment (temporary)
      ansible.builtin.copy:
        src: "{{ sap_vm_provision_terraform_work_dir_path }}/ssh/hosts_rsa"
        dest: "/tmp/hosts_rsa"
        mode: "0400"
      when: sap_vm_provision_ssh_host_private_key_file_path is undefined

    - name: Prepare for file transfers, copy Private SSH Key from local (Ansible host)
      ansible.builtin.copy:
        src: "{{ sap_vm_provision_ssh_host_private_key_file_path }}"
        dest: "/tmp/hosts_rsa"
        mode: "0400"
      when: sap_vm_provision_ssh_host_private_key_file_path is defined


- name: Ansible Play for copying SAP HANA Database Server installation media to other hosts
  hosts: hana_secondary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Set var of files list from SAP HANA primary, using lookup from Ansible hostvars with key as SAP HANA primary
      ansible.builtin.set_fact:
        sap_hana_install_media_files_list: "{{ hostvars[sap_vm_provision_dynamic_inventory_hana_primary_hostname].sap_hana_install_media_files.files | map(attribute='path') | list }}"

    - name: Transfer SAP HANA installation media to SAP HANA Primary and SAP HANA Secondary
      delegate_to: "{{ sap_vm_provision_dynamic_inventory_hana_primary_ip }}"
      remote_user: "root"
      ansible.posix.synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_source_directory }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
#        set_remote_user: false
      loop: "{{ sap_hana_install_media_files_list }}"


- name: Ansible Play to remove temporary files from SAP HANA primary host
  hosts: hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Remove temporary file, if it exists
      ansible.builtin.file:
        path: "/tmp/hosts_rsa"
        state: absent


#### Begin SAP software hosts preparation ####

- name: Ansible Play for preparing all SAP software hosts
  hosts: hana_primary, hana_secondary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_general_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_general_preconfigure

    - name: Execute Ansible Role sap_hana_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_preconfigure



- name: Ansible Play for appending temporary Virtual IP (VIP) after pre-configuration and reboot of hosts
  hosts: hana_primary, hana_secondary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_vm_temp_vip
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_temp_vip



#### Begin SAP software installations ####

- name: Ansible Play for SAP HANA Database Server installation
  hosts: hana_primary, hana_secondary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: false
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: false
        sap_install_media_detect_kernel: false
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db: "saphana"

    # Install SAP HANA
    - name: Execute Ansible Role sap_hana_install
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_install

    # Set variable for all nodes in the SAP HANA scale-up HA cluster configuration
    # Use definition of Virtual IP (VIP) and variables from Ansible Inventory groups
    - name: Set Ansible Variable shared by sap_ha_install_hana_hsr and sap_ha_pacemaker_cluster for SAP HANA scale-up HA cluster configuration
      ansible.builtin.set_fact:
        sap_hana_cluster_nodes:
          - node_name: "{{ hostvars[groups['hana_primary'][0]].ansible_hostname }}"
            node_ip: "{{ hostvars[groups['hana_primary'][0]].ansible_host }}"
            node_role: primary
            hana_site: DC01
          - node_name: "{{ hostvars[groups['hana_secondary'][0]].ansible_hostname }}"
            node_ip: "{{ hostvars[groups['hana_secondary'][0]].ansible_host }}"
            node_role: secondary
            hana_site: DC02
      # Not required to provide IP Addresses, but can define with:
      # "{{ hostvars[hostvars[ansible_host].groups.hana_primary[0]].ansible_default_ipv4.address }}"
      # "{{ hostvars[hostvars[ansible_host].groups.hana_secondary[0]].ansible_default_ipv4.address }}"

    # Execute setup of SAP HANA System Replication (HSR) with 2 nodes
    - name: Execute Ansible Role sap_ha_install_hana_hsr
      ansible.builtin.include_role:
        name: community.sap_install.sap_ha_install_hana_hsr
      vars:
        sap_ha_install_hana_hsr_cluster_nodes: "{{ sap_hana_cluster_nodes }}"

    # Execute setup of SAP HANA scale-up HA cluster
    # -- Linux Pacemaker cluster preparation
    # -- Linux Pacemaker basic cluster configuration, 2 nodes
    # -- SAP HANA scale-up HA Cluster configuration, with a Virtual IP (VIP)
    # -- Fencing Agent/s setup for Infrastructure: fence_aws
    # -- Resource Agent/s setup for Infrastructure: aws-vpc-move-ip
    # -- Resource Agent/s setup for SAP: SAPHanaSR/SAPHana, SAPHanaSR/SAPHanaTopology
    - name: Execute Ansible Role sap_ha_pacemaker_cluster
      ansible.builtin.include_role:
        name: community.sap_install.sap_ha_pacemaker_cluster
      vars:
        ha_cluster_cluster_name: clusterhdb
        ha_cluster_hacluster_password: 'clusterpass'
        ha_cluster:
          node_name: "{{ ansible_hostname }}"
          pcs_address: "{{ ansible_default_ipv4.address }}"

        sap_ha_pacemaker_cluster_sap_type: saphana_scaleup
        sap_ha_pacemaker_cluster_host_type:
          - hana_scaleup_perf

        sap_ha_pacemaker_cluster_hana_sid: "{{ sap_system_hana_db_sid }}"
        sap_ha_pacemaker_cluster_hana_instance_nr: "{{ sap_system_hana_db_instance_nr }}"

        sap_ha_pacemaker_cluster_cluster_nodes: "{{ sap_hana_cluster_nodes }}"
        sap_ha_pacemaker_cluster_replication_type: none
        sap_ha_pacemaker_cluster_vip_resource_group_name: viphdb


#### Post-install alterations for Infrastructure Platform ####

- name: "Ansible Play for Post-install alterations for Infrastructure Platform"
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Execute Ansible Role sap_vm_provision
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_provision
      vars:
        sap_vm_provision_iac_post_deployment: true
      when: sap_vm_provision_iac_type == "ansible"
