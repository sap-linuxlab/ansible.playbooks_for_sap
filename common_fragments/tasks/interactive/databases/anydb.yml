---
# Interactive prompts - Scenario - AnyDB (SAP ASE, IBM DB2, Oracle DB, SAP MaxDB)

# Following variables are defined and validated:
# - sap_anydb_install_oracle_method
# - sap_anydb_install_oracle_base
# - sap_anydb_install_oracle_filesystem_storage
# - sap_anydb_install_oracle_inventory_central
# - sap_anydb_install_oracle_system_password
# - sap_anydb_install_oracle_extract_path


# Oracle DB specific variables
- name: Block for sap_anydb_install_oracle_method
  when: sap_playbook_interactive_database == 'oracledb'
  block:
    - name: Prompt for Oracle DB installation method
      ansible.builtin.pause:
        prompt: |
          Enter the Oracle DB installation method.
          Available options: minimal, responsefile
          Press enter to skip and use the default value ('minimal').
      register: sap_anydb_install_oracle_method_register
      when: sap_anydb_install_oracle_method is not defined

    - name: Set fact for sap_anydb_install_oracle_method
      ansible.builtin.set_fact:
        sap_anydb_install_oracle_method:
          "{{ sap_anydb_install_oracle_method_register.user_input
            if sap_anydb_install_oracle_method_register.user_input | length > 0
            else 'minimal' }}"
      when: sap_anydb_install_oracle_method is not defined

    - name: Fail if sap_anydb_install_oracle_method is invalid
      ansible.builtin.fail:
        msg: |
          Invalid value for variable 'sap_anydb_install_oracle_method': '{{ sap_anydb_install_oracle_method }}'
          {% if sap_anydb_install_oracle_method_register.user_input is not defined -%}
            Correct this variable in extra vars or remove it from extra vars to enable interactive prompt.
          {% else -%}
            Re-run the playbook and provide a valid input.
          {% endif %}
      when: sap_anydb_install_oracle_method not in ['minimal', 'responsefile']


- name: Block for sap_anydb_install_oracle_base
  when: sap_playbook_interactive_database == 'oracledb'
  block:
    - name: Prompt for Oracle DB base path
      ansible.builtin.pause:
        prompt: |
          Enter the Oracle DB base path.
          Press enter to skip and use the default value ('/oracle').
      register: sap_anydb_install_oracle_base_register
      when: sap_anydb_install_oracle_base is not defined

    - name: Set fact for sap_anydb_install_oracle_base
      ansible.builtin.set_fact:
        sap_anydb_install_oracle_base:
          "{{ sap_anydb_install_oracle_base_register.user_input
            if sap_anydb_install_oracle_base_register.user_input | length > 0
            else '/oracle' }}"
      when: sap_anydb_install_oracle_base is not defined

    - name: Fail if sap_anydb_install_oracle_base is invalid
      ansible.builtin.fail:
        msg: |
          Invalid value for variable 'sap_anydb_install_oracle_base': '{{ sap_anydb_install_oracle_base }}'
          {% if sap_anydb_install_oracle_base_register.user_input is not defined -%}
            Correct this variable in extra vars or remove it from extra vars to enable interactive prompt.
          {% else -%}
            Re-run the playbook and provide a valid input.
          {% endif %}
      when:
        - sap_anydb_install_oracle_base | length == 0
          or sap_anydb_install_oracle_base == 'ENTER_STRING_VALUE_HERE'


- name: Block for sap_anydb_install_oracle_filesystem_storage
  when: sap_playbook_interactive_database == 'oracledb'
  block:
    - name: Prompt for Oracle DB data path
      ansible.builtin.pause:
        prompt: |
          Enter the Oracle DB data path.
          Press enter to skip and use the default value ('/oradata').
      register: sap_anydb_install_oracle_filesystem_storage_register
      when: sap_anydb_install_oracle_filesystem_storage is not defined

    - name: Set fact for sap_anydb_install_oracle_filesystem_storage
      ansible.builtin.set_fact:
        sap_anydb_install_oracle_filesystem_storage:
          "{{ sap_anydb_install_oracle_filesystem_storage_register.user_input
            if sap_anydb_install_oracle_filesystem_storage_register.user_input | length > 0
            else '/oradata' }}"
      when: sap_anydb_install_oracle_filesystem_storage is not defined

    - name: Fail if sap_anydb_install_oracle_filesystem_storage is invalid
      ansible.builtin.fail:
        msg: |
          Invalid value for variable 'sap_anydb_install_oracle_filesystem_storage': '{{ sap_anydb_install_oracle_filesystem_storage }}'
          {% if sap_anydb_install_oracle_filesystem_storage_register.user_input is not defined -%}
            Correct this variable in extra vars or remove it from extra vars to enable interactive prompt.
          {% else -%}
            Re-run the playbook and provide a valid input.
          {% endif %}
      when:
        - sap_anydb_install_oracle_filesystem_storage | length == 0
          or sap_anydb_install_oracle_filesystem_storage == 'ENTER_STRING_VALUE_HERE'


- name: Block for sap_anydb_install_oracle_inventory_central
  when: sap_playbook_interactive_database == 'oracledb'
  block:
    - name: Prompt for Oracle DB inventory path
      ansible.builtin.pause:
        prompt: |
          Enter the Oracle DB inventory path.
          Press enter to skip and use the default value ('/oraInventory').
      register: sap_anydb_install_oracle_inventory_central_register
      when: sap_anydb_install_oracle_inventory_central is not defined

    - name: Set fact for sap_anydb_install_oracle_inventory_central
      ansible.builtin.set_fact:
        sap_anydb_install_oracle_inventory_central:
          "{{ sap_anydb_install_oracle_inventory_central_register.user_input
            if sap_anydb_install_oracle_inventory_central_register.user_input | length > 0
            else '/oraInventory' }}"
      when: sap_anydb_install_oracle_inventory_central is not defined

    - name: Fail if sap_anydb_install_oracle_inventory_central is invalid
      ansible.builtin.fail:
        msg: |
          Invalid value for variable 'sap_anydb_install_oracle_inventory_central': '{{ sap_anydb_install_oracle_inventory_central }}'
          {% if sap_anydb_install_oracle_inventory_central_register.user_input is not defined -%}
            Correct this variable in extra vars or remove it from extra vars to enable interactive prompt.
          {% else -%}
            Re-run the playbook and provide a valid input.
          {% endif %}
      when:
        - sap_anydb_install_oracle_inventory_central | length == 0
          or sap_anydb_install_oracle_inventory_central == 'ENTER_STRING_VALUE_HERE'


- name: Block for sap_anydb_install_oracle_system_password
  when: sap_playbook_interactive_database == 'oracledb'
  block:
    - name: Prompt for Oracle DB System Password
      ansible.builtin.pause:
        prompt: |
          Enter the Oracle DB System Password.
      register: sap_anydb_install_oracle_system_password_register
      when: sap_anydb_install_oracle_system_password is not defined

    - name: Set fact for sap_anydb_install_oracle_system_password
      ansible.builtin.set_fact:
        sap_anydb_install_oracle_system_password: "{{ sap_anydb_install_oracle_system_password_register.user_input }}"

    - name: Fail if sap_anydb_install_oracle_system_password is invalid
      ansible.builtin.fail:
        msg: |
          Invalid value for variable 'sap_anydb_install_oracle_system_password': '{{ sap_anydb_install_oracle_system_password }}'
          {% if sap_anydb_install_oracle_system_password_register.user_input is not defined -%}
            Correct this variable in extra vars or remove it from extra vars to enable interactive prompt.
          {% else -%}
            Re-run the playbook and provide a valid input.
          {% endif %}
      when:
        - sap_anydb_install_oracle_system_password | length == 0
          or sap_anydb_install_oracle_system_password == 'ENTER_STRING_VALUE_HERE'


- name: Block for sap_anydb_install_oracle_extract_path
  when: sap_playbook_interactive_database == 'oracledb'
  block:
    - name: Prompt for Oracle DB Installation Software path
      ansible.builtin.pause:
        prompt: |
          Enter the path for Oracle DB Installation Software.
          Default is based on 'sap_install_media_detect_source_directory'.
          Press enter to skip and use the default value ('{{ sap_install_media_detect_source_directory }}').
      register: sap_anydb_install_oracle_extract_path_register
      when: sap_anydb_install_oracle_extract_path is not defined

    - name: Set fact for sap_anydb_install_oracle_extract_path
      ansible.builtin.set_fact:
        sap_anydb_install_oracle_extract_path:
          "{{ sap_anydb_install_oracle_extract_path_register.user_input
            if sap_anydb_install_oracle_extract_path_register.user_input | length > 0
            else sap_install_media_detect_source_directory }}"
      when: sap_anydb_install_oracle_extract_path is not defined

    - name: Fail if sap_anydb_install_oracle_extract_path is invalid
      ansible.builtin.fail:
        msg: |
          Invalid value for variable 'sap_anydb_install_oracle_extract_path': '{{ sap_anydb_install_oracle_extract_path }}'
          {% if sap_anydb_install_oracle_extract_path_register.user_input is not defined -%}
            Correct this variable in extra vars or remove it from extra vars to enable interactive prompt.
          {% else -%}
            Re-run the playbook and provide a valid input.
          {% endif %}
      when:
        - sap_anydb_install_oracle_extract_path | length == 0
          or sap_anydb_install_oracle_extract_path == 'ENTER_STRING_VALUE_HERE'


# High Availability variables
- name: Block for interactive tasks - SAP AnyDB - HA
  when: sap_playbook_interactive_layout in ['distributed_ha']
  block:
    - name: Check if interactive task file is available - SAP AnyDB - HA
      ansible.builtin.stat:
        path: "../../common_fragments/tasks/interactive/db_anydb_ha.yml"
      register: sap_playbook_interactive_tasks_anydb_availability
      ignore_errors: true

    - name: Execute interactive task file - SAP AnyDB - HA
      ansible.builtin.include_tasks:
        file: "../../common_fragments/tasks/interactive/db_anydb_ha.yml"
      when: sap_playbook_interactive_tasks_anydb_availability.stat.exists

    - name: Skip if interactive file was not found - SAP AnyDB - HA
      ansible.builtin.debug:
        msg: Interactive task file 'optional/interactive/db_anydb_ha.yml' was not found. Skipping.
      when: not sap_playbook_interactive_tasks_anydb_availability.stat.exists
