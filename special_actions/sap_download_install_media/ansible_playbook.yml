---

- name: Ansible Play for SAP Software installation media downloads
  hosts: all
  become: false

  pre_tasks:
    - name: Prompt for SAP S-User ID
      ansible.builtin.pause:
        prompt: |
          Enter your SAP S-User ID.
          Example: S0001234567
      register: sap_id_user_register
      when: sap_id_user is not defined

    - name: Prompt for SAP S-User Password
      ansible.builtin.pause:
        prompt: |
          Enter your SAP S-User password.
      register: sap_id_user_password_register
      when: sap_id_user_password is not defined
      no_log: true

    - name: Prompt for CPU Architecture
      ansible.builtin.pause:
        prompt: |
          Please enter the CPU Architecture of the SAP Software installation media to download.
          Available options: x86_64, ppc64le
          Press enter to skip and use the default value ('x86_64').
      register: sap_software_cpu_architecture_register
      when: sap_software_cpu_architecture is not defined

    - name: Prompt for SAP software product
      ansible.builtin.pause:
        prompt: |
          Please enter which SAP Software installation media to download, select from options:
          {% for key in sap_software_install_dictionary.keys() %}
          {{ key }}
          {% endfor %}
          Products are defined in the 'sap_software_install_dictionary' variable.
      register: sap_software_product_register
      when: sap_software_product is not defined

    - name: Prompt for SAP Software Download path
      ansible.builtin.pause:
        prompt: |
          Please enter the software directory on the target host.
          Press enter to skip and use the default value ('/software').
      register: sap_software_target_directory_register
      when: sap_software_target_directory is not defined


# Use include_role inside Task block, instead of using roles declaration or Task block with import_roles.
# This ensures Ansible Roles, and the tasks within, will be parsed in sequence instead of parsing at Playbook initialization
  tasks:

    - name: Set facts for all hosts
      ansible.builtin.set_fact:
        sap_id_user: "{{ sap_id_user | d(sap_id_user_register.user_input) }}"
        sap_id_user_password: "{{ sap_id_user_password | d(sap_id_user_password_register.user_input) }}"
        sap_software_cpu_architecture: "{{ sap_software_cpu_architecture |
          d(sap_software_cpu_architecture_register.user_input
          if sap_software_cpu_architecture_register.user_input | length > 0
          else 'x86_64') }}"
        sap_software_product: "{{ sap_software_product | d(sap_software_product_register.user_input) }}"
        sap_software_target_directory: "{{ sap_software_target_directory |
          d(sap_software_target_directory_register.user_input
          if sap_software_target_directory_register.user_input | length > 0
          else '/software') }}"

    # SAP software download will only occur if the 'community.sap_launchpad' collection is installed.
    # Playbook will continue without the collection, assuming SAP software is already available.
    - name: Check availability of sap_launchpad collection on execution node
      delegate_to: localhost
      become: false  # Enables usage of Python VENV
      ansible.builtin.command:
        cmd: ansible-galaxy collection list
      register: sap_playbook_collection_list_output

    - name: Execute Ansible Role sap_software_download
      ansible.builtin.include_role:
        name: community.sap_launchpad.sap_software_download
      vars:
        sap_software_download_suser_id: "{{ sap_id_user }}"
        sap_software_download_suser_password: "{{ sap_id_user_password }}"
        sap_software_download_directory: "{{ sap_software_target_directory }}"
        sap_software_download_deduplicate: first
        sap_software_download_files: "{{ sap_software_install_dictionary[item]
          ['softwarecenter_search_list_' ~ sap_software_cpu_architecture] }}"
      loop: "{{ sap_software_product.split(',') }}"
      when:
        - sap_playbook_collection_list_output.stdout_lines | select('search', 'community.sap_launchpad')
        - item in sap_software_install_dictionary.keys()
